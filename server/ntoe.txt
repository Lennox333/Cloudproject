test s3 bucket
set up rds then in database.js replace
    host: process.env.RDS_HOST,       // RDS endpoint RDS_HOST=your-rds-endpoint.amazonaws.com

We have a relatively small cap on the number of RDS instances. 
Please tag your RDS instances with key purpose set to assessment-2 and qut-username set to your full 
QUT username like n1234567@qut.edu.au. Teaching staff may need to delete old or improperly tagged RDS instances
 to make room for students using it for their assessment.
test rds aws, and remember tochange env in database.js


queue the ffmpeg trancoding

 aws ec2 describe-key-pairs \
          --key-names n11547413-New-Key-Pair \
          --include-public-key \
          --query "KeyPairs[].PublicKey" \
          --profile=default


remember to put these into terraform env const REGION = "ap-southeast-2";

docker start -ai server-app-1

docker-compose exec app npm install


curl -X POST http://ec2-3-27-206-106.ap-southeast-2.compute.amazonaws.com:5000/register \
  -H "Content-Type: application/json" \
  -d '{
    "username": "ln607090",
    "password": "TestPassword123!",
    "email": "ln607090@gmail.com"
  }'

curl -X POST http://ec2-3-27-206-106.ap-southeast-2.compute.amazonaws.com:5000/confirm-registration \
  -H "Content-Type: application/json" \
  -d '{
    "username": "ln607090",
    "confirmationCode": "021534"
  }'


  curl -X POST http://ec2-54-252-39-141.ap-southeast-2.compute.amazonaws.com:5000/login \
  -H "Content-Type: application/json" \
  -d '{
    "username": "ln607090",
    "password": "TestPassword123!"
  }'



 curl -s -X POST http://ec2-54-252-39-141.ap-southeast-2.compute.amazonaws.com:5000/login \
  -H "Content-Type: application/json" \
  -d '{
    "username": "ln607090",
    "password": "TestPassword123!"
  }' | jq -r '.accessToken'


  TOKEN=$(curl -s -X POST http://$AWSURL:5000/login \
  -H "Content-Type: application/json" \
  -d '{"username":"ln607090","password":"TestPassword123!"}' | jq -r '.accessToken')


RESPONSE=$(curl -s -X POST http://ec2-54-252-39-141.ap-southeast-2.compute.amazonaws.com:5000/get-upload-url \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"filename":"example.mp4","title":"Test Video"}')

VIDEO_ID=$(echo $RESPONSE | jq -r '.videoId')
S3_KEY=$(echo $RESPONSE | jq -r '.s3Key')
UPLOAD_URL=$(echo $RESPONSE | jq -r '.uploadUrl')


curl -X PUT "$UPLOAD_URL" \
  -T "/home/ln607/Videos/recording_2025-07-24_20-09-43.mp4" \
  -H "Content-Type: video/mp4"

TITLE="Test Video"
DESCRIPTION="Optional description"


curl -X POST http://ec2-54-252-39-141.ap-southeast-2.compute.amazonaws.com:5000/start-encode \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d "{
    \"videoId\": \"$VIDEO_ID\",
    \"s3Key\": \"$S3_KEY\",
    \"title\": \"$TITLE\",
    \"description\": \"$DESCRIPTION\"
  }"



#####

VIDEO_ID="e7795a51-2742-42ea-9d41-39739e13e5f4"
S3_KEY="videos/e7795a51-2742-42ea-9d41-39739e13e5f4.mp4"
TITLE="Test Video"
DESCRIPTION="Optional description"


AWSURL="ec2-13-211-139-99.ap-southeast-2.compute.amazonaws.com"

curl -X POST http://$AWSURL:5000/transcodetest \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d "{
    \"videoId\": \"$VIDEO_ID\",
    \"s3Key\": \"$S3_KEY\",
    \"title\": \"$TITLE\"  }"


curl -X GET "http://$AWSURL:5000/get-video-url-test?videoId=e7795a51-2742-42ea-9d41-39739e13e5f4_720p.mp4"

curl -X GET http://$AWSURL:5000/thumbnails/e7795a51-2742-42ea-9d41-39739e13e5f4